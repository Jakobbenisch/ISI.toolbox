% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/OtherScripts.R
\name{EventDetector}
\alias{EventDetector}
\title{A function for detection Discharge Events.}
\usage{
EventDetector(q_xts, quantile_limit = 90, fixed_limit = NULL,
  min_duration_in_time_steps = 180, padding_in_time_steps = 600,
  padding_ratio = 1/3, inpute_NA = TRUE, na_approx_max_gap = 5,
  dry_weather = FALSE)
}
\arguments{
\item{q_xts}{Xts vector. Timeseries containing flow signal.}

\item{quantile_limit}{Numeric value. Is used for autosetting the limit value for event detection via the quantile of the flow distribution. The quantile_limit must be between 1 and 99.}

\item{fixed_limit}{Numeric value. If desired a fixed flow limit can be set for event detection. (quantile_limit must be set to NULL in that case.)}

\item{min_duration_in_time_steps}{Integer. The value speciefies the minimal number of timesteps that the limit value needs to be exceeded so that it will be recognized as event.}

\item{padding_in_time_steps}{Integer. Padding for detected events, so that the begiing and end will also be captured.}

\item{padding_ratio}{Numeric value. Must be between 0.05 and 0.95. Specifies the padding backward in time (padding_in_time_steps x padding_ratio) and forward in time (padding_in_time_steps x (1-padding_ratio)).}

\item{inpute_NA}{Boolean. If True the original time series containing NA values for all non event time steps will be returned. Else the original time series will be cut so that it only contains events.}

\item{na_approx_max_gap}{Integer. Gaps in flow signal up to size na_approx_max_gap will be interpolated linearly. Greater gaps will be filled with zero.}

\item{dry_weather}{Boolean. If you do not need events but dry weather times}
}
\value{
Xts with the desired timezone.
}
\description{
This functionwas designed to detect increase in flow. It finds events via 2 criteria, the exceedance of a limit value and the duration of exceedance. Both should be provided by the user.
}
\examples{
TS=DummyTS(days=50)
Events=EventDetector(TS,fixed_limit = 35,quantile_limit = NULL)
DynPlot(cbind(TS,Events))
}
